module Vale_aes128_encrypt_block
#verbatim{:interface}{:implementation}

open X64.Machine_s
open X64.Memory_i_s
open X64.Vale.State_i
open X64.Vale.Decls_i
#set-options "--z3rlimit 20"
#endverbatim

procedure aes128_encrypt_block(ghost stack_b:buffer64, ghost input_b:buffer128, ghost output_b:buffer128, ghost key:(aes_key_LE AES_128), ghost keys_b:buffer128)
    requires/ensures
        locs_disjoint(list(loc_buffer(stack_b), loc_buffer(input_b), loc_buffer(output_b), loc_buffer(keys_b)));
        buffer_readable(mem, stack_b);
        buffer_readable(mem, input_b);
        buffer_readable(mem, output_b);
        buffer_readable(mem, keys_b);
        rdi == buffer_addr(input_b, mem);
        rsi == buffer_addr(output_b, mem);
        rdx == buffer_addr(keys_b, mem);
    ensures
        rbx == old(rbx);
        rbp == old(rbp);
        r12 == old(r12);
        r13 == old(r13);
        r14 == old(r14);
        r15 == old(r15);
    modifies
        rax; rbx; rcx; rdx; rsi; rdi; rbp; rsp; r8; r9; r10; r11; r12; r13; r14; r15;
        xmm0; xmm1; xmm2; xmM3; xmm4; xmm5; xmm6; xmm7; xmm8; xmm9; xmm10; xmm11; xmm12; xmm13; xmm14; xmm15;
        efl; mem;
{

}
