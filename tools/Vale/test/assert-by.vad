include "common.vad"

#verbatim
predicate F(i:int)
predicate G(i:int)

lemma L(i:int)
    requires F(i)
    ensures  G(i)

predicate{:opaque} OpaqueTruth(x:int)
{
    true
}
#endverbatim

procedure{:instruction Ins(InsIncr(x))} Increment(inout register x:int)
    ensures
        x == old(x) + 1;
{
}

procedure P(inout register o:int, inline k:int, ghost g:int)
    requires
        @o != EAX;
        g >= 1;
    ensures
        eax == old(eax) + 1;
        o == old(o) + 1;
        g >= 0;
    modifies
        eax;
{
    Increment(eax);
    Increment(o);
}

procedure Q(inline iii:int, ghost g:int)
    requires
        F(eax + 3);
        g >= 0;
    ensures
        G(eax);
    modifies
        eax; ebx;
{
    P(ebx, 10, 100);
    ghost var a1 := g + 1;
    ghost var a2 := eax;
    P(ebx, 20, a1);
    assert ebx == old(ebx) + 2;
    assert OpaqueTruth(65) by
    {
        assert ebx - 2 == old(ebx);
        reveal OpaqueTruth;
    }
    ghost var a3 := eax;
    ghost var a4 := old(eax);
    assert a2 == a4 + 1 by
    {
        assert a3 == a2 + 1;
        assert a3 == a4 + 2;
    }
    ghost if (a3 < 10)
    {
        a3 := a3 + 1;
    }
    P(ebx, 30, a1 + a1);
    L(eax);
}
